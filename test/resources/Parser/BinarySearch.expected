Program
  MainClass BinarySearch
    Print
      new BS().Start(20)
  Class BS
    int[] number
    int size
    MethodDecl Start
      returns int
      parameters:
        int sz
      int aux01
      int aux02
      aux01 = this.Init(sz)
      aux02 = this.Print()
      if this.Search(8)
        Print
          1
      else
        Print
          0
      if this.Search(19)
        Print
          1
      else
        Print
          0
      if this.Search(20)
        Print
          1
      else
        Print
          0
      if this.Search(21)
        Print
          1
      else
        Print
          0
      if this.Search(37)
        Print
          1
      else
        Print
          0
      if this.Search(38)
        Print
          1
      else
        Print
          0
      if this.Search(39)
        Print
          1
      else
        Print
          0
      if this.Search(50)
        Print
          1
      else
        Print
          0
      Return 999
    MethodDecl Search
      returns boolean
      parameters:
        int num
      boolean bs01
      int right
      int left
      boolean var_cont
      int medium
      int aux01
      int nt
      aux01 = 0
      bs01 = false
      right = number.length
      right = (right - 1)
      left = 0
      var_cont = true
      while var_cont
        medium = (left + right)
        medium = this.Div(medium)
        aux01 = number[medium]
        if (num < aux01)
          right = (medium - 1)
        else
          left = (medium + 1)
        if this.Compare(aux01, num)
          var_cont = false
        else
          var_cont = true
        if (right < left)
          var_cont = false
        else
          nt = 0
      if this.Compare(aux01, num)
        bs01 = true
      else
        bs01 = false
      Return bs01
    MethodDecl Div
      returns int
      parameters:
        int num
      int count01
      int count02
      int aux03
      count01 = 0
      count02 = 0
      aux03 = (num - 1)
      while (count02 < aux03)
        count01 = (count01 + 1)
        count02 = (count02 + 2)
      Return count01
    MethodDecl Compare
      returns boolean
      parameters:
        int num1
        int num2
      boolean retval
      int aux02
      retval = false
      aux02 = (num2 + 1)
      if (num1 < num2)
        retval = false
      else
        if !(num1 < aux02)
          retval = false
        else
          retval = true
      Return retval
    MethodDecl Print
      returns int
      int j
      j = 1
      while (j < size)
        Print
          number[j]
        j = (j + 1)
      Print
        99999
      Return 0
    MethodDecl Init
      returns int
      parameters:
        int sz
      int j
      int k
      int aux02
      int aux01
      size = sz
      number = new int[sz]
      j = 1
      k = (size + 1)
      while (j < size)
        aux01 = (2 * j)
        aux02 = (k - 3)
        number[j] = (aux01 + aux02)
        j = (j + 1)
        k = (k - 1)
      Return 0